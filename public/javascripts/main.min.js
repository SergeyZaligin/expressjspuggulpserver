(global => {
    'use strict';
    
    const App = global.App || {};
    
    function $ (selector) {
       
        let elems = [];
       
        if (typeof selector === 'string') {
            elems = document.querySelectorAll(selector);
        } else {
            elems = [selector];
        }
        console.log(elems);
        
        return new Elems(elems);
        
    };
    
    /**
     * Class elems
     * 
     * @param {object} elems
     * @returns {dom=>#1.Elems}
     */
    function Elems (elems) {
        
        /**
         * Array select dom elems or empty array
         */
        this.elems = elems || [];
        
        /**
         * Handler events
         * 
         * @param {string} type event
         * @param {object|function} callback
         * @returns {this}
         */
        this.on = (type, callback) => {
            
            if (undefined === callback) {
                
                const cnt = elems.length-1;
                let evt = document.createEvent('Event');
                evt.initEvent(type, true, true);
                
                for (let i = cnt; i >= 0; i--) {
                    elems[i].dispatchEvent(evt);
                }
                
            } else {
                
                const cnt = elems.length-1;

                for (let i = cnt; i >= 0; i--) {
                    elems[i].addEventListener(type, callback);
                }
            }
            
            return this;
        };
        
        /**
         * Past html in select elem
         * 
         * @param {string} code
         * @returns {dom=>#1.Elems|Array.innerHTML}
         */
        this.html = (code) => {
            
            if (undefined === code) {
                return elems[0].innerHTML;
            } else {
                const cnt = elems.length-1;
            
                for (let i = cnt; i >= 0; i--) {
                    elems[i].innerHTML = code;
                }
            }
            
            return this;
        };
        
        /**
         * Hide dom elem
         * 
         * @param {string} type
         * @returns {dom=>#1.Elems}
         */
        this.hide = (type = 'none') => {
            
            const cnt = elems.length-1;
            
            for (let i = cnt; i >= 0; i--) {
                elems[i].style.display = type;
            }
            
            return this;
        };
        
        /**
         * Show dom elem
         * 
         * @param {string} type
         * @returns {dom=>#1.Elems}
         */
        this.show = (type = 'block') => {
            
            const cnt = elems.length-1;
            
            for (let i = cnt; i >= 0; i--) {
                elems[i].style.display = type;
            }
            
            return this;
        };
    }
    
    App.$ = $;
    global.App = App;
    
})(window);



(global => {
    'use strict';
   
    /**
     * Object App
     * 
     * @type object |global.App
     */
    const App = global.App || {};
   
    /**
     * Constructor handler form signup
     * 
     * @param {Object} selector
     * @returns {registrationL#1.FormHandler}
     */
    function SignupHandler(selector) {
        if (!selector) {
            throw new Error('No selector provided');
        } else {
            this.selector = document.querySelector(selector);
        }
    }
    
    SignupHandler.prototype.init = function () {
        if (this.selector) {

            this.selector.addEventListener('submit', e => {
                e.preventDefault();
                const formEntries = new FormData(this.selector).entries();
                const dataForm = JSON.stringify(Object.assign(...Array.from(formEntries, ([x,y]) => ({[x]:y}))));


                async function asaw () {
                    const response = await fetch('/auth/registration', {
                        method: "post",
                        headers: {
                            "Accept": 'application/json, text/plain, */*',
                            "Content-Type": "application/json"
                        },
                        body: dataForm
                     })
                     const json = await response.json();
                     const msg = document.querySelector('.message');
                     msg.innerHTML = json.message;
                     window.location = "/auth/registration";
                     console.log(json);
                }
                asaw();
                // fetch('/auth/registration', {
                //    method: "post",
                //    headers: {
                //        "Accept": 'application/json, text/plain, */*',
                //        "Content-Type": "application/json"
                //    },
                //    body: dataForm
                // }).then(function(res) {  
                //         return res.json();  
                //     }).then(function(data){
                //         const msg = document.querySelector('.message');
                //         msg.innerHTML = data.message;
                //         window.location = "/auth/registration";
                //         console.log(data);
                //     });

            });


        } else {
            return false;
        }
        
        
    };
    
    App.SignupHandler = SignupHandler;
    global.App = App;
    
})(window);
(global => {
    'use strict';
    
    const FORM_SIGNUP_SELECTOR = '#signup-form';

    /*beginGlobals*/
    const App = global.App;
    /*endGlobals*/

    console.log('App===>', App);

    /*beginCommonFunction*/
    const $ = App.$;
    /*endCommonFunction*/

    /*beginSignupFormHandler*/
    //console.log(global.document.getElementById('signup-form'));
    const SignupHandler = new App.SignupHandler(FORM_SIGNUP_SELECTOR);
    SignupHandler.init();
    /*endSignupFormHandler*/

})(window);